{"ast":null,"code":"var _jsxFileName = \"/Users/duongthanhduy/Toeic_vocabulary/TOEIC_FE/src/pages/Quiz.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Box, Typography, Button, Card, CardContent, CircularProgress, Alert, Paper, LinearProgress, AppBar, Toolbar, IconButton, Dialog, DialogTitle, DialogContent, DialogActions } from '@mui/material';\nimport { ArrowBack as ArrowBackIcon, CheckCircleOutline as CorrectIcon, Cancel as WrongIcon, EmojiEvents as TrophyIcon } from '@mui/icons-material';\nimport { useNavigate } from 'react-router-dom';\nimport { api } from '../services/api';\nimport { useAuth } from '../contexts/AuthContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Quiz = () => {\n  _s();\n  const navigate = useNavigate();\n  const [vocabularies, setVocabularies] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [showResult, setShowResult] = useState(false);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [isCorrect, setIsCorrect] = useState(null);\n  const [quizQuestions, setQuizQuestions] = useState([]);\n  const {\n    isAuthenticated\n  } = useAuth();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    if (!isAuthenticated) {\n      navigate('/login');\n      return;\n    }\n    const fetchQuiz = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        // Fetch quiz questions directly from the backend\n        const questions = await api.generateQuiz(10); // You can adjust the number of questions\n\n        // Transform the backend quiz format to match our component's format\n        const formattedQuestions = questions.map(q => ({\n          word: q.question.replace(\"What is the meaning of '\", \"\").replace(\"'?\", \"\"),\n          correctAnswer: q.answer,\n          options: q.choices\n        }));\n        setQuizQuestions(formattedQuestions);\n      } catch (error) {\n        console.error('Error fetching quiz:', error);\n        setError('Failed to load quiz questions. Please make sure you have enough vocabulary words.');\n        // Navigate back to vocabulary page if there's an error\n        navigate('/vocabulary');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchQuiz();\n  }, [isAuthenticated, navigate]);\n\n  // We no longer need this function as we're getting questions from the API\n  // Keeping a simplified version for the restart functionality\n  const refreshQuiz = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const questions = await api.generateQuiz(10);\n      const formattedQuestions = questions.map(q => ({\n        word: q.question.replace(\"What is the meaning of '\", \"\").replace(\"'?\", \"\"),\n        correctAnswer: q.answer,\n        options: q.choices\n      }));\n      setQuizQuestions(formattedQuestions);\n    } catch (error) {\n      console.error('Error refreshing quiz:', error);\n      setError('Failed to refresh quiz questions.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleAnswerSelect = answer => {\n    if (selectedAnswer !== null) return;\n    setSelectedAnswer(answer);\n    const correct = answer === quizQuestions[currentQuestionIndex].correctAnswer;\n    setIsCorrect(correct);\n    if (correct) setScore(score + 1);\n    setTimeout(() => {\n      if (currentQuestionIndex === quizQuestions.length - 1) {\n        setShowResult(true);\n      } else {\n        setCurrentQuestionIndex(currentQuestionIndex + 1);\n        setSelectedAnswer(null);\n        setIsCorrect(null);\n      }\n    }, 1500);\n  };\n  const restartQuiz = () => {\n    setCurrentQuestionIndex(0);\n    setScore(0);\n    setShowResult(false);\n    setSelectedAnswer(null);\n    setIsCorrect(null);\n    refreshQuiz();\n  };\n  const getScoreMessage = () => {\n    const percentage = score / quizQuestions.length * 100;\n    if (percentage === 100) return \"Perfect! You're a vocabulary master!\";\n    if (percentage >= 80) return \"Great job! Keep up the good work!\";\n    if (percentage >= 60) return \"Good effort! Practice more to improve!\";\n    return \"Keep practicing! You'll get better!\";\n  };\n  const getScoreColor = () => {\n    const percentage = score / quizQuestions.length * 100;\n    if (percentage === 100) return '#4CAF50';\n    if (percentage >= 80) return '#8BC34A';\n    if (percentage >= 60) return '#FFC107';\n    return '#FF5722';\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        minHeight: '100vh',\n        background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        sx: {\n          color: 'white'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        minHeight: '100vh',\n        background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        padding: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        sx: {\n          p: 4,\n          maxWidth: 600,\n          width: '100%',\n          borderRadius: 2,\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          sx: {\n            mb: 2\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: () => navigate('/vocabulary'),\n          sx: {\n            mt: 2,\n            background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\n            borderRadius: '25px',\n            padding: '8px 24px'\n          },\n          children: \"Go to Vocabulary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this);\n  }\n  if (!quizQuestions.length) return null;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      minHeight: '100vh',\n      background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)'\n    },\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      sx: {\n        background: 'rgba(255, 255, 255, 0.1)',\n        backdropFilter: 'blur(10px)',\n        boxShadow: 'none'\n      },\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          edge: \"start\",\n          color: \"inherit\",\n          onClick: () => navigate('/dashboard'),\n          sx: {\n            mr: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            flexGrow: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            component: \"div\",\n            sx: {\n              color: 'white',\n              fontWeight: 'bold'\n            },\n            children: \"Vocabulary Quiz\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            sx: {\n              color: 'rgba(255, 255, 255, 0.8)'\n            },\n            children: \"Test your knowledge and track your progress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      sx: {\n        mt: 4,\n        pb: 4\n      },\n      children: !showResult ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 4\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              mb: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              sx: {\n                color: 'white'\n              },\n              children: [\"Question \", currentQuestionIndex + 1, \" of \", quizQuestions.length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              sx: {\n                color: 'white'\n              },\n              children: [\"Score: \", score]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n            variant: \"determinate\",\n            value: currentQuestionIndex / quizQuestions.length * 100,\n            sx: {\n              height: 10,\n              borderRadius: 5,\n              backgroundColor: 'rgba(255, 255, 255, 0.2)',\n              '& .MuiLinearProgress-bar': {\n                backgroundColor: 'white'\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            borderRadius: '20px',\n            background: 'rgba(255, 255, 255, 0.9)',\n            backdropFilter: 'blur(10px)',\n            boxShadow: '0 8px 32px 0 rgba(31, 38, 135, 0.37)'\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            sx: {\n              p: 4\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              align: \"center\",\n              gutterBottom: true,\n              sx: {\n                color: '#2c3e50',\n                fontWeight: 'bold',\n                mb: 4\n              },\n              children: quizQuestions[currentQuestionIndex].word\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'grid',\n                gap: 2\n              },\n              children: quizQuestions[currentQuestionIndex].options.map((option, index) => /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                onClick: () => handleAnswerSelect(option),\n                disabled: selectedAnswer !== null,\n                sx: {\n                  p: 2,\n                  borderRadius: '12px',\n                  borderWidth: '2px',\n                  textTransform: 'none',\n                  fontSize: '1rem',\n                  justifyContent: 'flex-start',\n                  ...(selectedAnswer === option && {\n                    borderColor: isCorrect ? '#4CAF50' : '#f44336',\n                    bgcolor: isCorrect ? 'rgba(76, 175, 80, 0.1)' : 'rgba(244, 67, 54, 0.1)',\n                    color: isCorrect ? '#4CAF50' : '#f44336'\n                  }),\n                  ...(selectedAnswer && option === quizQuestions[currentQuestionIndex].correctAnswer && {\n                    borderColor: '#4CAF50',\n                    bgcolor: 'rgba(76, 175, 80, 0.1)',\n                    color: '#4CAF50'\n                  })\n                },\n                children: [option, selectedAnswer === option && /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    ml: 'auto'\n                  },\n                  children: isCorrect ? /*#__PURE__*/_jsxDEV(CorrectIcon, {\n                    sx: {\n                      color: '#4CAF50'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 337,\n                    columnNumber: 29\n                  }, this) : /*#__PURE__*/_jsxDEV(WrongIcon, {\n                    sx: {\n                      color: '#f44336'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 339,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 335,\n                  columnNumber: 25\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(Dialog, {\n        open: showResult,\n        maxWidth: \"sm\",\n        fullWidth: true,\n        PaperProps: {\n          sx: {\n            borderRadius: '20px',\n            background: 'rgba(255, 255, 255, 0.9)',\n            backdropFilter: 'blur(10px)'\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              textAlign: 'center',\n              mt: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(TrophyIcon, {\n              sx: {\n                fontSize: 60,\n                color: getScoreColor(),\n                mb: 2\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              gutterBottom: true,\n              sx: {\n                fontWeight: 'bold',\n                color: '#2c3e50'\n              },\n              children: \"Quiz Complete!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              textAlign: 'center',\n              mb: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              gutterBottom: true,\n              sx: {\n                color: getScoreColor(),\n                fontWeight: 'bold'\n              },\n              children: [\"Your Score: \", score, \"/\", quizQuestions.length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              sx: {\n                color: '#7f8c8d'\n              },\n              children: getScoreMessage()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          sx: {\n            p: 3,\n            justifyContent: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => navigate('/dashboard'),\n            sx: {\n              color: '#7f8c8d',\n              mr: 1,\n              '&:hover': {\n                background: 'rgba(127, 140, 141, 0.1)'\n              }\n            },\n            children: \"Back to Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: restartQuiz,\n            sx: {\n              background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\n              borderRadius: '25px',\n              padding: '8px 24px',\n              color: 'white',\n              fontWeight: 'bold',\n              '&:hover': {\n                background: 'linear-gradient(45deg, #1976D2 30%, #1E88E5 90%)'\n              }\n            },\n            children: \"Try Again\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 213,\n    columnNumber: 5\n  }, this);\n};\n_s(Quiz, \"KOAqvgIM9Svmlr6xz1VUP/qpftk=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","Container","Box","Typography","Button","Card","CardContent","CircularProgress","Alert","Paper","LinearProgress","AppBar","Toolbar","IconButton","Dialog","DialogTitle","DialogContent","DialogActions","ArrowBack","ArrowBackIcon","CheckCircleOutline","CorrectIcon","Cancel","WrongIcon","EmojiEvents","TrophyIcon","useNavigate","api","useAuth","jsxDEV","_jsxDEV","Fragment","_Fragment","Quiz","_s","navigate","vocabularies","setVocabularies","currentQuestionIndex","setCurrentQuestionIndex","score","setScore","showResult","setShowResult","selectedAnswer","setSelectedAnswer","isCorrect","setIsCorrect","quizQuestions","setQuizQuestions","isAuthenticated","loading","setLoading","error","setError","fetchQuiz","questions","generateQuiz","formattedQuestions","map","q","word","question","replace","correctAnswer","answer","options","choices","console","refreshQuiz","handleAnswerSelect","correct","setTimeout","length","restartQuiz","getScoreMessage","percentage","getScoreColor","sx","minHeight","background","display","justifyContent","alignItems","children","color","fileName","_jsxFileName","lineNumber","columnNumber","padding","elevation","p","maxWidth","width","borderRadius","textAlign","severity","mb","variant","onClick","mt","position","backdropFilter","boxShadow","edge","mr","flexGrow","component","fontWeight","pb","value","height","backgroundColor","align","gutterBottom","gap","option","index","disabled","borderWidth","textTransform","fontSize","borderColor","bgcolor","ml","open","fullWidth","PaperProps","_c","$RefreshReg$"],"sources":["/Users/duongthanhduy/Toeic_vocabulary/TOEIC_FE/src/pages/Quiz.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Container,\n  Box,\n  Typography,\n  Button,\n  Card,\n  CardContent,\n  Radio,\n  RadioGroup,\n  FormControlLabel,\n  FormControl,\n  CircularProgress,\n  Alert,\n  Paper,\n  LinearProgress,\n  AppBar,\n  Toolbar,\n  IconButton,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n} from '@mui/material';\nimport {\n  ArrowBack as ArrowBackIcon,\n  CheckCircleOutline as CorrectIcon,\n  Cancel as WrongIcon,\n  EmojiEvents as TrophyIcon,\n} from '@mui/icons-material';\nimport { useNavigate } from 'react-router-dom';\nimport { api, QuizQuestion } from '../services/api';\nimport { useAuth } from '../contexts/AuthContext';\n\nconst Quiz: React.FC = () => {\n  const navigate = useNavigate();\n  const [vocabularies, setVocabularies] = useState<Array<{ id: string; word: string; meaning: string }>>([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [showResult, setShowResult] = useState(false);\n  const [selectedAnswer, setSelectedAnswer] = useState<string | null>(null);\n  const [isCorrect, setIsCorrect] = useState<boolean | null>(null);\n  const [quizQuestions, setQuizQuestions] = useState<Array<{\n    word: string;\n    correctAnswer: string;\n    options: string[];\n  }>>([]);\n\n  const { isAuthenticated } = useAuth();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    if (!isAuthenticated) {\n      navigate('/login');\n      return;\n    }\n\n    const fetchQuiz = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        // Fetch quiz questions directly from the backend\n        const questions = await api.generateQuiz(10); // You can adjust the number of questions\n        \n        // Transform the backend quiz format to match our component's format\n        const formattedQuestions = questions.map(q => ({\n          word: q.question.replace(\"What is the meaning of '\", \"\").replace(\"'?\", \"\"),\n          correctAnswer: q.answer,\n          options: q.choices\n        }));\n        \n        setQuizQuestions(formattedQuestions);\n      } catch (error) {\n        console.error('Error fetching quiz:', error);\n        setError('Failed to load quiz questions. Please make sure you have enough vocabulary words.');\n        // Navigate back to vocabulary page if there's an error\n        navigate('/vocabulary');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchQuiz();\n  }, [isAuthenticated, navigate]);\n\n  // We no longer need this function as we're getting questions from the API\n  // Keeping a simplified version for the restart functionality\n  const refreshQuiz = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const questions = await api.generateQuiz(10);\n      const formattedQuestions = questions.map(q => ({\n        word: q.question.replace(\"What is the meaning of '\", \"\").replace(\"'?\", \"\"),\n        correctAnswer: q.answer,\n        options: q.choices\n      }));\n      setQuizQuestions(formattedQuestions);\n    } catch (error) {\n      console.error('Error refreshing quiz:', error);\n      setError('Failed to refresh quiz questions.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleAnswerSelect = (answer: string) => {\n    if (selectedAnswer !== null) return;\n\n    setSelectedAnswer(answer);\n    const correct = answer === quizQuestions[currentQuestionIndex].correctAnswer;\n    setIsCorrect(correct);\n    if (correct) setScore(score + 1);\n\n    setTimeout(() => {\n      if (currentQuestionIndex === quizQuestions.length - 1) {\n        setShowResult(true);\n      } else {\n        setCurrentQuestionIndex(currentQuestionIndex + 1);\n        setSelectedAnswer(null);\n        setIsCorrect(null);\n      }\n    }, 1500);\n  };\n\n  const restartQuiz = () => {\n    setCurrentQuestionIndex(0);\n    setScore(0);\n    setShowResult(false);\n    setSelectedAnswer(null);\n    setIsCorrect(null);\n    refreshQuiz();\n  };\n\n  const getScoreMessage = () => {\n    const percentage = (score / quizQuestions.length) * 100;\n    if (percentage === 100) return \"Perfect! You're a vocabulary master!\";\n    if (percentage >= 80) return \"Great job! Keep up the good work!\";\n    if (percentage >= 60) return \"Good effort! Practice more to improve!\";\n    return \"Keep practicing! You'll get better!\";\n  };\n\n  const getScoreColor = () => {\n    const percentage = (score / quizQuestions.length) * 100;\n    if (percentage === 100) return '#4CAF50';\n    if (percentage >= 80) return '#8BC34A';\n    if (percentage >= 60) return '#FFC107';\n    return '#FF5722';\n  };\n\n  if (loading) {\n    return (\n      <Box\n        sx={{\n          minHeight: '100vh',\n          background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <CircularProgress sx={{ color: 'white' }} />\n      </Box>\n    );\n  }\n\n  if (error) {\n    return (\n      <Box\n        sx={{\n          minHeight: '100vh',\n          background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          padding: 3,\n        }}\n      >\n        <Paper\n          elevation={3}\n          sx={{\n            p: 4,\n            maxWidth: 600,\n            width: '100%',\n            borderRadius: 2,\n            textAlign: 'center',\n          }}\n        >\n          <Alert severity=\"error\" sx={{ mb: 2 }}>\n            {error}\n          </Alert>\n          <Button\n            variant=\"contained\"\n            onClick={() => navigate('/vocabulary')}\n            sx={{\n              mt: 2,\n              background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\n              borderRadius: '25px',\n              padding: '8px 24px',\n            }}\n          >\n            Go to Vocabulary\n          </Button>\n        </Paper>\n      </Box>\n    );\n  }\n\n  if (!quizQuestions.length) return null;\n\n  return (\n    <Box\n      sx={{\n        minHeight: '100vh',\n        background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\n      }}\n    >\n      <AppBar \n        position=\"static\" \n        sx={{ \n          background: 'rgba(255, 255, 255, 0.1)',\n          backdropFilter: 'blur(10px)',\n          boxShadow: 'none',\n        }}\n      >\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            onClick={() => navigate('/dashboard')}\n            sx={{ mr: 2 }}\n          >\n            <ArrowBackIcon />\n          </IconButton>\n          <Box sx={{ flexGrow: 1 }}>\n            <Typography \n              variant=\"h6\" \n              component=\"div\"\n              sx={{ \n                color: 'white',\n                fontWeight: 'bold',\n              }}\n            >\n              Vocabulary Quiz\n            </Typography>\n            <Typography \n              variant=\"subtitle2\"\n              sx={{ \n                color: 'rgba(255, 255, 255, 0.8)',\n              }}\n            >\n              Test your knowledge and track your progress\n            </Typography>\n          </Box>\n        </Toolbar>\n      </AppBar>\n\n      <Container maxWidth=\"md\" sx={{ mt: 4, pb: 4 }}>\n        {!showResult ? (\n          <>\n            <Box sx={{ mb: 4 }}>\n              <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 1 }}>\n                <Typography variant=\"body2\" sx={{ color: 'white' }}>\n                  Question {currentQuestionIndex + 1} of {quizQuestions.length}\n                </Typography>\n                <Typography variant=\"body2\" sx={{ color: 'white' }}>\n                  Score: {score}\n                </Typography>\n              </Box>\n              <LinearProgress \n                variant=\"determinate\" \n                value={(currentQuestionIndex / quizQuestions.length) * 100}\n                sx={{\n                  height: 10,\n                  borderRadius: 5,\n                  backgroundColor: 'rgba(255, 255, 255, 0.2)',\n                  '& .MuiLinearProgress-bar': {\n                    backgroundColor: 'white',\n                  },\n                }}\n              />\n            </Box>\n\n            <Card\n              sx={{\n                borderRadius: '20px',\n                background: 'rgba(255, 255, 255, 0.9)',\n                backdropFilter: 'blur(10px)',\n                boxShadow: '0 8px 32px 0 rgba(31, 38, 135, 0.37)',\n              }}\n            >\n              <CardContent sx={{ p: 4 }}>\n                <Typography \n                  variant=\"h4\" \n                  align=\"center\" \n                  gutterBottom\n                  sx={{\n                    color: '#2c3e50',\n                    fontWeight: 'bold',\n                    mb: 4,\n                  }}\n                >\n                  {quizQuestions[currentQuestionIndex].word}\n                </Typography>\n\n                <Box sx={{ display: 'grid', gap: 2 }}>\n                  {quizQuestions[currentQuestionIndex].options.map((option, index) => (\n                    <Button\n                      key={index}\n                      variant=\"outlined\"\n                      onClick={() => handleAnswerSelect(option)}\n                      disabled={selectedAnswer !== null}\n                      sx={{\n                        p: 2,\n                        borderRadius: '12px',\n                        borderWidth: '2px',\n                        textTransform: 'none',\n                        fontSize: '1rem',\n                        justifyContent: 'flex-start',\n                        ...((selectedAnswer === option) && {\n                          borderColor: isCorrect ? '#4CAF50' : '#f44336',\n                          bgcolor: isCorrect ? 'rgba(76, 175, 80, 0.1)' : 'rgba(244, 67, 54, 0.1)',\n                          color: isCorrect ? '#4CAF50' : '#f44336',\n                        }),\n                        ...(selectedAnswer && option === quizQuestions[currentQuestionIndex].correctAnswer && {\n                          borderColor: '#4CAF50',\n                          bgcolor: 'rgba(76, 175, 80, 0.1)',\n                          color: '#4CAF50',\n                        }),\n                      }}\n                    >\n                      {option}\n                      {selectedAnswer === option && (\n                        <Box sx={{ ml: 'auto' }}>\n                          {isCorrect ? (\n                            <CorrectIcon sx={{ color: '#4CAF50' }} />\n                          ) : (\n                            <WrongIcon sx={{ color: '#f44336' }} />\n                          )}\n                        </Box>\n                      )}\n                    </Button>\n                  ))}\n                </Box>\n              </CardContent>\n            </Card>\n          </>\n        ) : (\n          <Dialog\n            open={showResult}\n            maxWidth=\"sm\"\n            fullWidth\n            PaperProps={{\n              sx: {\n                borderRadius: '20px',\n                background: 'rgba(255, 255, 255, 0.9)',\n                backdropFilter: 'blur(10px)',\n              }\n            }}\n          >\n            <DialogTitle>\n              <Box sx={{ textAlign: 'center', mt: 2 }}>\n                <TrophyIcon sx={{ fontSize: 60, color: getScoreColor(), mb: 2 }} />\n                <Typography variant=\"h4\" gutterBottom sx={{ fontWeight: 'bold', color: '#2c3e50' }}>\n                  Quiz Complete!\n                </Typography>\n              </Box>\n            </DialogTitle>\n            <DialogContent>\n              <Box sx={{ textAlign: 'center', mb: 3 }}>\n                <Typography variant=\"h5\" gutterBottom sx={{ color: getScoreColor(), fontWeight: 'bold' }}>\n                  Your Score: {score}/{quizQuestions.length}\n                </Typography>\n                <Typography variant=\"body1\" sx={{ color: '#7f8c8d' }}>\n                  {getScoreMessage()}\n                </Typography>\n              </Box>\n            </DialogContent>\n            <DialogActions sx={{ p: 3, justifyContent: 'center' }}>\n              <Button\n                onClick={() => navigate('/dashboard')}\n                sx={{\n                  color: '#7f8c8d',\n                  mr: 1,\n                  '&:hover': {\n                    background: 'rgba(127, 140, 141, 0.1)',\n                  },\n                }}\n              >\n                Back to Dashboard\n              </Button>\n              <Button\n                variant=\"contained\"\n                onClick={restartQuiz}\n                sx={{\n                  background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\n                  borderRadius: '25px',\n                  padding: '8px 24px',\n                  color: 'white',\n                  fontWeight: 'bold',\n                  '&:hover': {\n                    background: 'linear-gradient(45deg, #1976D2 30%, #1E88E5 90%)',\n                  },\n                }}\n              >\n                Try Again\n              </Button>\n            </DialogActions>\n          </Dialog>\n        )}\n      </Container>\n    </Box>\n  );\n};\n\nexport default Quiz;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}