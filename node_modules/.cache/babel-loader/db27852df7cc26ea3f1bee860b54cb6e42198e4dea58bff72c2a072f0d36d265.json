{"ast":null,"code":"var _jsxFileName = \"/Users/duongthanhduy/TOEIC_FE/src/contexts/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { auth, createUser, signIn, signInWithGoogle } from '../firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n\n  // Check if user is authenticated on initial load\n  useEffect(() => {\n    const checkAuth = async () => {\n      const token = localStorage.getItem('access_token');\n      const username = localStorage.getItem('username');\n      if (token && username) {\n        setUser({\n          username\n        });\n        setIsAuthenticated(true);\n      }\n      setLoading(false);\n    };\n    checkAuth();\n  }, []);\n  const login = async (email, password) => {\n    try {\n      await signIn(auth, email, password);\n      const user = auth.currentUser;\n      if (user) {\n        localStorage.setItem('username', user.email || '');\n        setUser({\n          username: user.email || ''\n        });\n        setIsAuthenticated(true);\n        setError(null);\n        return true;\n      }\n      return false;\n    } catch (error) {\n      console.error('Login error:', error);\n      setError('Invalid email or password');\n      return false;\n    }\n  };\n  const loginWithGoogle = async () => {\n    try {\n      const user = await signInWithGoogle();\n      if (user) {\n        localStorage.setItem('username', user.email || '');\n        setUser({\n          username: user.email || ''\n        });\n        setIsAuthenticated(true);\n        setError(null);\n        return true;\n      }\n      return false;\n    } catch (error) {\n      console.error('Google login error:', error);\n      setError('Failed to sign in with Google');\n      return false;\n    }\n  };\n  const register = async (email, password) => {\n    try {\n      await createUser(auth, email, password);\n      const user = auth.currentUser;\n      if (user) {\n        localStorage.setItem('username', user.email || '');\n        setUser({\n          username: user.email || ''\n        });\n        setIsAuthenticated(true);\n        setError(null);\n        return true;\n      }\n      return false;\n    } catch (error) {\n      console.error('Registration error:', error);\n      setError('Registration failed');\n      return false;\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('username');\n    setUser(null);\n    setIsAuthenticated(false);\n    navigate('/login');\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      loading,\n      login,\n      loginWithGoogle,\n      register,\n      logout,\n      isAuthenticated,\n      error\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"qe7ZJTQKWs3afFnjA6DNxgJcoaU=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","useNavigate","auth","createUser","signIn","signInWithGoogle","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","user","setUser","loading","setLoading","isAuthenticated","setIsAuthenticated","error","setError","navigate","checkAuth","token","localStorage","getItem","username","login","email","password","currentUser","setItem","console","loginWithGoogle","register","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["/Users/duongthanhduy/TOEIC_FE/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { auth, createUser, signIn, logout, signInWithGoogle } from '../firebase';\n\ninterface User {\n  username: string;\n}\n\ninterface AuthContextType {\n  user: User | null;\n  loading: boolean;\n  login: (email: string, password: string) => Promise<boolean>;\n  loginWithGoogle: () => Promise<boolean>;\n  register: (email: string, password: string) => Promise<boolean>;\n  logout: () => void;\n  isAuthenticated: boolean;\n  error: string | null;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const navigate = useNavigate();\n\n  // Check if user is authenticated on initial load\n  useEffect(() => {\n    const checkAuth = async () => {\n      const token = localStorage.getItem('access_token');\n      const username = localStorage.getItem('username');\n      \n      if (token && username) {\n        setUser({ username });\n        setIsAuthenticated(true);\n      }\n      \n      setLoading(false);\n    };\n    \n    checkAuth();\n  }, []);\n\n  const login = async (email: string, password: string): Promise<boolean> => {\n    try {\n      await signIn(auth, email, password);\n      const user = auth.currentUser;\n      if (user) {\n        localStorage.setItem('username', user.email || '');\n        setUser({ username: user.email || '' });\n        setIsAuthenticated(true);\n        setError(null);\n        return true;\n      }\n      return false;\n    } catch (error) {\n      console.error('Login error:', error);\n      setError('Invalid email or password');\n      return false;\n    }\n  };\n\n  const loginWithGoogle = async (): Promise<boolean> => {\n    try {\n      const user = await signInWithGoogle();\n      if (user) {\n        localStorage.setItem('username', user.email || '');\n        setUser({ username: user.email || '' });\n        setIsAuthenticated(true);\n        setError(null);\n        return true;\n      }\n      return false;\n    } catch (error) {\n      console.error('Google login error:', error);\n      setError('Failed to sign in with Google');\n      return false;\n    }\n  };\n\n  const register = async (email: string, password: string): Promise<boolean> => {\n    try {\n      await createUser(auth, email, password);\n      const user = auth.currentUser;\n      if (user) {\n        localStorage.setItem('username', user.email || '');\n        setUser({ username: user.email || '' });\n        setIsAuthenticated(true);\n        setError(null);\n        return true;\n      }\n      return false;\n    } catch (error) {\n      console.error('Registration error:', error);\n      setError('Registration failed');\n      return false;\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('username');\n    setUser(null);\n    setIsAuthenticated(false);\n    navigate('/login');\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, loading, login, loginWithGoogle, register, logout, isAuthenticated, error }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC7E,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,IAAI,EAAEC,UAAU,EAAEC,MAAM,EAAUC,gBAAgB,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAiBjF,MAAMC,WAAW,gBAAGX,aAAa,CAA8BY,SAAS,CAAC;AAEzE,OAAO,MAAMC,YAAqD,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrF,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAc,IAAI,CAAC;EACnD,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACiB,eAAe,EAAEC,kBAAkB,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACmB,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAAgB,IAAI,CAAC;EACvD,MAAMqB,QAAQ,GAAGpB,WAAW,CAAC,CAAC;;EAE9B;EACAF,SAAS,CAAC,MAAM;IACd,MAAMuB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;MAClD,MAAMC,QAAQ,GAAGF,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;MAEjD,IAAIF,KAAK,IAAIG,QAAQ,EAAE;QACrBZ,OAAO,CAAC;UAAEY;QAAS,CAAC,CAAC;QACrBR,kBAAkB,CAAC,IAAI,CAAC;MAC1B;MAEAF,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC;IAEDM,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,KAAK,GAAG,MAAAA,CAAOC,KAAa,EAAEC,QAAgB,KAAuB;IACzE,IAAI;MACF,MAAMzB,MAAM,CAACF,IAAI,EAAE0B,KAAK,EAAEC,QAAQ,CAAC;MACnC,MAAMhB,IAAI,GAAGX,IAAI,CAAC4B,WAAW;MAC7B,IAAIjB,IAAI,EAAE;QACRW,YAAY,CAACO,OAAO,CAAC,UAAU,EAAElB,IAAI,CAACe,KAAK,IAAI,EAAE,CAAC;QAClDd,OAAO,CAAC;UAAEY,QAAQ,EAAEb,IAAI,CAACe,KAAK,IAAI;QAAG,CAAC,CAAC;QACvCV,kBAAkB,CAAC,IAAI,CAAC;QACxBE,QAAQ,CAAC,IAAI,CAAC;QACd,OAAO,IAAI;MACb;MACA,OAAO,KAAK;IACd,CAAC,CAAC,OAAOD,KAAK,EAAE;MACda,OAAO,CAACb,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACpCC,QAAQ,CAAC,2BAA2B,CAAC;MACrC,OAAO,KAAK;IACd;EACF,CAAC;EAED,MAAMa,eAAe,GAAG,MAAAA,CAAA,KAA8B;IACpD,IAAI;MACF,MAAMpB,IAAI,GAAG,MAAMR,gBAAgB,CAAC,CAAC;MACrC,IAAIQ,IAAI,EAAE;QACRW,YAAY,CAACO,OAAO,CAAC,UAAU,EAAElB,IAAI,CAACe,KAAK,IAAI,EAAE,CAAC;QAClDd,OAAO,CAAC;UAAEY,QAAQ,EAAEb,IAAI,CAACe,KAAK,IAAI;QAAG,CAAC,CAAC;QACvCV,kBAAkB,CAAC,IAAI,CAAC;QACxBE,QAAQ,CAAC,IAAI,CAAC;QACd,OAAO,IAAI;MACb;MACA,OAAO,KAAK;IACd,CAAC,CAAC,OAAOD,KAAK,EAAE;MACda,OAAO,CAACb,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3CC,QAAQ,CAAC,+BAA+B,CAAC;MACzC,OAAO,KAAK;IACd;EACF,CAAC;EAED,MAAMc,QAAQ,GAAG,MAAAA,CAAON,KAAa,EAAEC,QAAgB,KAAuB;IAC5E,IAAI;MACF,MAAM1B,UAAU,CAACD,IAAI,EAAE0B,KAAK,EAAEC,QAAQ,CAAC;MACvC,MAAMhB,IAAI,GAAGX,IAAI,CAAC4B,WAAW;MAC7B,IAAIjB,IAAI,EAAE;QACRW,YAAY,CAACO,OAAO,CAAC,UAAU,EAAElB,IAAI,CAACe,KAAK,IAAI,EAAE,CAAC;QAClDd,OAAO,CAAC;UAAEY,QAAQ,EAAEb,IAAI,CAACe,KAAK,IAAI;QAAG,CAAC,CAAC;QACvCV,kBAAkB,CAAC,IAAI,CAAC;QACxBE,QAAQ,CAAC,IAAI,CAAC;QACd,OAAO,IAAI;MACb;MACA,OAAO,KAAK;IACd,CAAC,CAAC,OAAOD,KAAK,EAAE;MACda,OAAO,CAACb,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3CC,QAAQ,CAAC,qBAAqB,CAAC;MAC/B,OAAO,KAAK;IACd;EACF,CAAC;EAED,MAAMe,MAAM,GAAGA,CAAA,KAAM;IACnBX,YAAY,CAACY,UAAU,CAAC,cAAc,CAAC;IACvCZ,YAAY,CAACY,UAAU,CAAC,UAAU,CAAC;IACnCtB,OAAO,CAAC,IAAI,CAAC;IACbI,kBAAkB,CAAC,KAAK,CAAC;IACzBG,QAAQ,CAAC,QAAQ,CAAC;EACpB,CAAC;EAED,oBACEd,OAAA,CAACC,WAAW,CAAC6B,QAAQ;IAACC,KAAK,EAAE;MAAEzB,IAAI;MAAEE,OAAO;MAAEY,KAAK;MAAEM,eAAe;MAAEC,QAAQ;MAAEC,MAAM;MAAElB,eAAe;MAAEE;IAAM,CAAE;IAAAR,QAAA,EAC9GA;EAAQ;IAAA4B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC9B,EAAA,CA7FWF,YAAqD;EAAA,QAK/CT,WAAW;AAAA;AAAA0C,EAAA,GALjBjC,YAAqD;AA+FlE,OAAO,MAAMkC,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAMC,OAAO,GAAGhD,UAAU,CAACU,WAAW,CAAC;EACvC,IAAIsC,OAAO,KAAKrC,SAAS,EAAE;IACzB,MAAM,IAAIsC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}