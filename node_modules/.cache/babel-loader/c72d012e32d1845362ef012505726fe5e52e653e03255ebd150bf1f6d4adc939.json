{"ast":null,"code":"var _jsxFileName = \"/Users/duongthanhduy/toeic-learning-app/src/pages/Quiz.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Box, Typography, Button, LinearProgress, AppBar, Toolbar, IconButton, Card, CardContent, Dialog, DialogTitle, DialogContent, DialogActions } from '@mui/material';\nimport { ArrowBack as ArrowBackIcon, CheckCircleOutline as CorrectIcon, Cancel as WrongIcon, EmojiEvents as TrophyIcon } from '@mui/icons-material';\nimport { useNavigate } from 'react-router-dom';\nimport { storage } from '../utils/storage';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Quiz = () => {\n  _s();\n  const navigate = useNavigate();\n  const [vocabularies, setVocabularies] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [showResult, setShowResult] = useState(false);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [isCorrect, setIsCorrect] = useState(null);\n  const [quizQuestions, setQuizQuestions] = useState([]);\n  useEffect(() => {\n    const currentUser = storage.getCurrentUser();\n    if (!currentUser) {\n      navigate('/login');\n      return;\n    }\n    const userVocabularies = storage.getVocabularies();\n    if (userVocabularies.length < 4) {\n      navigate('/vocabulary');\n      return;\n    }\n    setVocabularies(userVocabularies);\n    generateQuizQuestions(userVocabularies);\n  }, [navigate]);\n  const generateQuizQuestions = vocabList => {\n    const questions = vocabList.map(vocab => {\n      const otherMeanings = vocabList.filter(v => v.id !== vocab.id).map(v => v.meaning);\n      const shuffledMeanings = [...otherMeanings].sort(() => Math.random() - 0.5);\n      const options = [vocab.meaning, ...shuffledMeanings.slice(0, 3)].sort(() => Math.random() - 0.5);\n      return {\n        word: vocab.word,\n        correctAnswer: vocab.meaning,\n        options\n      };\n    });\n    setQuizQuestions(questions);\n  };\n  const handleAnswerSelect = answer => {\n    if (selectedAnswer !== null) return;\n    setSelectedAnswer(answer);\n    const correct = answer === quizQuestions[currentQuestionIndex].correctAnswer;\n    setIsCorrect(correct);\n    if (correct) setScore(score + 1);\n    setTimeout(() => {\n      if (currentQuestionIndex === quizQuestions.length - 1) {\n        setShowResult(true);\n      } else {\n        setCurrentQuestionIndex(currentQuestionIndex + 1);\n        setSelectedAnswer(null);\n        setIsCorrect(null);\n      }\n    }, 1500);\n  };\n  const restartQuiz = () => {\n    setCurrentQuestionIndex(0);\n    setScore(0);\n    setShowResult(false);\n    setSelectedAnswer(null);\n    setIsCorrect(null);\n    generateQuizQuestions(vocabularies);\n  };\n  const getScoreMessage = () => {\n    const percentage = score / quizQuestions.length * 100;\n    if (percentage === 100) return \"Perfect! You're a vocabulary master!\";\n    if (percentage >= 80) return \"Great job! Keep up the good work!\";\n    if (percentage >= 60) return \"Good effort! Practice more to improve!\";\n    return \"Keep practicing! You'll get better!\";\n  };\n  const getScoreColor = () => {\n    const percentage = score / quizQuestions.length * 100;\n    if (percentage === 100) return '#4CAF50';\n    if (percentage >= 80) return '#8BC34A';\n    if (percentage >= 60) return '#FFC107';\n    return '#FF5722';\n  };\n  if (!quizQuestions.length) return null;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      minHeight: '100vh',\n      background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)'\n    },\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      sx: {\n        background: 'rgba(255, 255, 255, 0.1)',\n        backdropFilter: 'blur(10px)',\n        boxShadow: 'none'\n      },\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          edge: \"start\",\n          color: \"inherit\",\n          onClick: () => navigate('/dashboard'),\n          sx: {\n            mr: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            flexGrow: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            component: \"div\",\n            sx: {\n              color: 'white',\n              fontWeight: 'bold'\n            },\n            children: \"Vocabulary Quiz\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            sx: {\n              color: 'rgba(255, 255, 255, 0.8)'\n            },\n            children: \"Test your knowledge and track your progress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      sx: {\n        mt: 4,\n        pb: 4\n      },\n      children: !showResult ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 4\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              mb: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              sx: {\n                color: 'white'\n              },\n              children: [\"Question \", currentQuestionIndex + 1, \" of \", quizQuestions.length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              sx: {\n                color: 'white'\n              },\n              children: [\"Score: \", score]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n            variant: \"determinate\",\n            value: currentQuestionIndex / quizQuestions.length * 100,\n            sx: {\n              height: 10,\n              borderRadius: 5,\n              backgroundColor: 'rgba(255, 255, 255, 0.2)',\n              '& .MuiLinearProgress-bar': {\n                backgroundColor: 'white'\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            borderRadius: '20px',\n            background: 'rgba(255, 255, 255, 0.9)',\n            backdropFilter: 'blur(10px)',\n            boxShadow: '0 8px 32px 0 rgba(31, 38, 135, 0.37)'\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            sx: {\n              p: 4\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              align: \"center\",\n              gutterBottom: true,\n              sx: {\n                color: '#2c3e50',\n                fontWeight: 'bold',\n                mb: 4\n              },\n              children: quizQuestions[currentQuestionIndex].word\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'grid',\n                gap: 2\n              },\n              children: quizQuestions[currentQuestionIndex].options.map((option, index) => /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                onClick: () => handleAnswerSelect(option),\n                disabled: selectedAnswer !== null,\n                sx: {\n                  p: 2,\n                  borderRadius: '12px',\n                  borderWidth: '2px',\n                  textTransform: 'none',\n                  fontSize: '1rem',\n                  justifyContent: 'flex-start',\n                  ...(selectedAnswer === option && {\n                    borderColor: isCorrect ? '#4CAF50' : '#f44336',\n                    bgcolor: isCorrect ? 'rgba(76, 175, 80, 0.1)' : 'rgba(244, 67, 54, 0.1)',\n                    color: isCorrect ? '#4CAF50' : '#f44336'\n                  }),\n                  ...(selectedAnswer && option === quizQuestions[currentQuestionIndex].correctAnswer && {\n                    borderColor: '#4CAF50',\n                    bgcolor: 'rgba(76, 175, 80, 0.1)',\n                    color: '#4CAF50'\n                  })\n                },\n                children: [option, selectedAnswer === option && /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    ml: 'auto'\n                  },\n                  children: isCorrect ? /*#__PURE__*/_jsxDEV(CorrectIcon, {\n                    sx: {\n                      color: '#4CAF50'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 251,\n                    columnNumber: 29\n                  }, this) : /*#__PURE__*/_jsxDEV(WrongIcon, {\n                    sx: {\n                      color: '#f44336'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 253,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 25\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(Dialog, {\n        open: showResult,\n        maxWidth: \"sm\",\n        fullWidth: true,\n        PaperProps: {\n          sx: {\n            borderRadius: '20px',\n            background: 'rgba(255, 255, 255, 0.9)',\n            backdropFilter: 'blur(10px)'\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              textAlign: 'center',\n              mt: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(TrophyIcon, {\n              sx: {\n                fontSize: 60,\n                color: getScoreColor(),\n                mb: 2\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              gutterBottom: true,\n              sx: {\n                fontWeight: 'bold',\n                color: '#2c3e50'\n              },\n              children: \"Quiz Complete!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              textAlign: 'center',\n              mb: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              gutterBottom: true,\n              sx: {\n                color: getScoreColor(),\n                fontWeight: 'bold'\n              },\n              children: [\"Your Score: \", score, \"/\", quizQuestions.length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              sx: {\n                color: '#7f8c8d'\n              },\n              children: getScoreMessage()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          sx: {\n            p: 3,\n            justifyContent: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => navigate('/dashboard'),\n            sx: {\n              color: '#7f8c8d',\n              mr: 1,\n              '&:hover': {\n                background: 'rgba(127, 140, 141, 0.1)'\n              }\n            },\n            children: \"Back to Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: restartQuiz,\n            sx: {\n              background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\n              borderRadius: '25px',\n              padding: '8px 24px',\n              color: 'white',\n              fontWeight: 'bold',\n              '&:hover': {\n                background: 'linear-gradient(45deg, #1976D2 30%, #1E88E5 90%)'\n              }\n            },\n            children: \"Try Again\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n_s(Quiz, \"u9MAjk3mxWNOCmadli0P7Hw08vo=\", false, function () {\n  return [useNavigate];\n});\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","Container","Box","Typography","Button","LinearProgress","AppBar","Toolbar","IconButton","Card","CardContent","Dialog","DialogTitle","DialogContent","DialogActions","ArrowBack","ArrowBackIcon","CheckCircleOutline","CorrectIcon","Cancel","WrongIcon","EmojiEvents","TrophyIcon","useNavigate","storage","jsxDEV","_jsxDEV","Fragment","_Fragment","Quiz","_s","navigate","vocabularies","setVocabularies","currentQuestionIndex","setCurrentQuestionIndex","score","setScore","showResult","setShowResult","selectedAnswer","setSelectedAnswer","isCorrect","setIsCorrect","quizQuestions","setQuizQuestions","currentUser","getCurrentUser","userVocabularies","getVocabularies","length","generateQuizQuestions","vocabList","questions","map","vocab","otherMeanings","filter","v","id","meaning","shuffledMeanings","sort","Math","random","options","slice","word","correctAnswer","handleAnswerSelect","answer","correct","setTimeout","restartQuiz","getScoreMessage","percentage","getScoreColor","sx","minHeight","background","children","position","backdropFilter","boxShadow","edge","color","onClick","mr","fileName","_jsxFileName","lineNumber","columnNumber","flexGrow","variant","component","fontWeight","maxWidth","mt","pb","mb","display","justifyContent","alignItems","value","height","borderRadius","backgroundColor","p","align","gutterBottom","gap","option","index","disabled","borderWidth","textTransform","fontSize","borderColor","bgcolor","ml","open","fullWidth","PaperProps","textAlign","padding","_c","$RefreshReg$"],"sources":["/Users/duongthanhduy/toeic-learning-app/src/pages/Quiz.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Container,\n  Box,\n  Typography,\n  Button,\n  Paper,\n  LinearProgress,\n  AppBar,\n  Toolbar,\n  IconButton,\n  Card,\n  CardContent,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n} from '@mui/material';\nimport {\n  ArrowBack as ArrowBackIcon,\n  CheckCircleOutline as CorrectIcon,\n  Cancel as WrongIcon,\n  EmojiEvents as TrophyIcon,\n} from '@mui/icons-material';\nimport { useNavigate } from 'react-router-dom';\nimport { storage } from '../utils/storage';\n\nconst Quiz: React.FC = () => {\n  const navigate = useNavigate();\n  const [vocabularies, setVocabularies] = useState<Array<{ id: string; word: string; meaning: string }>>([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [showResult, setShowResult] = useState(false);\n  const [selectedAnswer, setSelectedAnswer] = useState<string | null>(null);\n  const [isCorrect, setIsCorrect] = useState<boolean | null>(null);\n  const [quizQuestions, setQuizQuestions] = useState<Array<{\n    word: string;\n    correctAnswer: string;\n    options: string[];\n  }>>([]);\n\n  useEffect(() => {\n    const currentUser = storage.getCurrentUser();\n    if (!currentUser) {\n      navigate('/login');\n      return;\n    }\n\n    const userVocabularies = storage.getVocabularies();\n    if (userVocabularies.length < 4) {\n      navigate('/vocabulary');\n      return;\n    }\n\n    setVocabularies(userVocabularies);\n    generateQuizQuestions(userVocabularies);\n  }, [navigate]);\n\n  const generateQuizQuestions = (vocabList: Array<{ id: string; word: string; meaning: string }>) => {\n    const questions = vocabList.map((vocab) => {\n      const otherMeanings = vocabList\n        .filter((v) => v.id !== vocab.id)\n        .map((v) => v.meaning);\n      const shuffledMeanings = [...otherMeanings].sort(() => Math.random() - 0.5);\n      const options = [\n        vocab.meaning,\n        ...shuffledMeanings.slice(0, 3),\n      ].sort(() => Math.random() - 0.5);\n\n      return {\n        word: vocab.word,\n        correctAnswer: vocab.meaning,\n        options,\n      };\n    });\n\n    setQuizQuestions(questions);\n  };\n\n  const handleAnswerSelect = (answer: string) => {\n    if (selectedAnswer !== null) return;\n\n    setSelectedAnswer(answer);\n    const correct = answer === quizQuestions[currentQuestionIndex].correctAnswer;\n    setIsCorrect(correct);\n    if (correct) setScore(score + 1);\n\n    setTimeout(() => {\n      if (currentQuestionIndex === quizQuestions.length - 1) {\n        setShowResult(true);\n      } else {\n        setCurrentQuestionIndex(currentQuestionIndex + 1);\n        setSelectedAnswer(null);\n        setIsCorrect(null);\n      }\n    }, 1500);\n  };\n\n  const restartQuiz = () => {\n    setCurrentQuestionIndex(0);\n    setScore(0);\n    setShowResult(false);\n    setSelectedAnswer(null);\n    setIsCorrect(null);\n    generateQuizQuestions(vocabularies);\n  };\n\n  const getScoreMessage = () => {\n    const percentage = (score / quizQuestions.length) * 100;\n    if (percentage === 100) return \"Perfect! You're a vocabulary master!\";\n    if (percentage >= 80) return \"Great job! Keep up the good work!\";\n    if (percentage >= 60) return \"Good effort! Practice more to improve!\";\n    return \"Keep practicing! You'll get better!\";\n  };\n\n  const getScoreColor = () => {\n    const percentage = (score / quizQuestions.length) * 100;\n    if (percentage === 100) return '#4CAF50';\n    if (percentage >= 80) return '#8BC34A';\n    if (percentage >= 60) return '#FFC107';\n    return '#FF5722';\n  };\n\n  if (!quizQuestions.length) return null;\n\n  return (\n    <Box\n      sx={{\n        minHeight: '100vh',\n        background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\n      }}\n    >\n      <AppBar \n        position=\"static\" \n        sx={{ \n          background: 'rgba(255, 255, 255, 0.1)',\n          backdropFilter: 'blur(10px)',\n          boxShadow: 'none',\n        }}\n      >\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            onClick={() => navigate('/dashboard')}\n            sx={{ mr: 2 }}\n          >\n            <ArrowBackIcon />\n          </IconButton>\n          <Box sx={{ flexGrow: 1 }}>\n            <Typography \n              variant=\"h6\" \n              component=\"div\"\n              sx={{ \n                color: 'white',\n                fontWeight: 'bold',\n              }}\n            >\n              Vocabulary Quiz\n            </Typography>\n            <Typography \n              variant=\"subtitle2\"\n              sx={{ \n                color: 'rgba(255, 255, 255, 0.8)',\n              }}\n            >\n              Test your knowledge and track your progress\n            </Typography>\n          </Box>\n        </Toolbar>\n      </AppBar>\n\n      <Container maxWidth=\"md\" sx={{ mt: 4, pb: 4 }}>\n        {!showResult ? (\n          <>\n            <Box sx={{ mb: 4 }}>\n              <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 1 }}>\n                <Typography variant=\"body2\" sx={{ color: 'white' }}>\n                  Question {currentQuestionIndex + 1} of {quizQuestions.length}\n                </Typography>\n                <Typography variant=\"body2\" sx={{ color: 'white' }}>\n                  Score: {score}\n                </Typography>\n              </Box>\n              <LinearProgress \n                variant=\"determinate\" \n                value={(currentQuestionIndex / quizQuestions.length) * 100}\n                sx={{\n                  height: 10,\n                  borderRadius: 5,\n                  backgroundColor: 'rgba(255, 255, 255, 0.2)',\n                  '& .MuiLinearProgress-bar': {\n                    backgroundColor: 'white',\n                  },\n                }}\n              />\n            </Box>\n\n            <Card\n              sx={{\n                borderRadius: '20px',\n                background: 'rgba(255, 255, 255, 0.9)',\n                backdropFilter: 'blur(10px)',\n                boxShadow: '0 8px 32px 0 rgba(31, 38, 135, 0.37)',\n              }}\n            >\n              <CardContent sx={{ p: 4 }}>\n                <Typography \n                  variant=\"h4\" \n                  align=\"center\" \n                  gutterBottom\n                  sx={{\n                    color: '#2c3e50',\n                    fontWeight: 'bold',\n                    mb: 4,\n                  }}\n                >\n                  {quizQuestions[currentQuestionIndex].word}\n                </Typography>\n\n                <Box sx={{ display: 'grid', gap: 2 }}>\n                  {quizQuestions[currentQuestionIndex].options.map((option, index) => (\n                    <Button\n                      key={index}\n                      variant=\"outlined\"\n                      onClick={() => handleAnswerSelect(option)}\n                      disabled={selectedAnswer !== null}\n                      sx={{\n                        p: 2,\n                        borderRadius: '12px',\n                        borderWidth: '2px',\n                        textTransform: 'none',\n                        fontSize: '1rem',\n                        justifyContent: 'flex-start',\n                        ...((selectedAnswer === option) && {\n                          borderColor: isCorrect ? '#4CAF50' : '#f44336',\n                          bgcolor: isCorrect ? 'rgba(76, 175, 80, 0.1)' : 'rgba(244, 67, 54, 0.1)',\n                          color: isCorrect ? '#4CAF50' : '#f44336',\n                        }),\n                        ...(selectedAnswer && option === quizQuestions[currentQuestionIndex].correctAnswer && {\n                          borderColor: '#4CAF50',\n                          bgcolor: 'rgba(76, 175, 80, 0.1)',\n                          color: '#4CAF50',\n                        }),\n                      }}\n                    >\n                      {option}\n                      {selectedAnswer === option && (\n                        <Box sx={{ ml: 'auto' }}>\n                          {isCorrect ? (\n                            <CorrectIcon sx={{ color: '#4CAF50' }} />\n                          ) : (\n                            <WrongIcon sx={{ color: '#f44336' }} />\n                          )}\n                        </Box>\n                      )}\n                    </Button>\n                  ))}\n                </Box>\n              </CardContent>\n            </Card>\n          </>\n        ) : (\n          <Dialog\n            open={showResult}\n            maxWidth=\"sm\"\n            fullWidth\n            PaperProps={{\n              sx: {\n                borderRadius: '20px',\n                background: 'rgba(255, 255, 255, 0.9)',\n                backdropFilter: 'blur(10px)',\n              }\n            }}\n          >\n            <DialogTitle>\n              <Box sx={{ textAlign: 'center', mt: 2 }}>\n                <TrophyIcon sx={{ fontSize: 60, color: getScoreColor(), mb: 2 }} />\n                <Typography variant=\"h4\" gutterBottom sx={{ fontWeight: 'bold', color: '#2c3e50' }}>\n                  Quiz Complete!\n                </Typography>\n              </Box>\n            </DialogTitle>\n            <DialogContent>\n              <Box sx={{ textAlign: 'center', mb: 3 }}>\n                <Typography variant=\"h5\" gutterBottom sx={{ color: getScoreColor(), fontWeight: 'bold' }}>\n                  Your Score: {score}/{quizQuestions.length}\n                </Typography>\n                <Typography variant=\"body1\" sx={{ color: '#7f8c8d' }}>\n                  {getScoreMessage()}\n                </Typography>\n              </Box>\n            </DialogContent>\n            <DialogActions sx={{ p: 3, justifyContent: 'center' }}>\n              <Button\n                onClick={() => navigate('/dashboard')}\n                sx={{\n                  color: '#7f8c8d',\n                  mr: 1,\n                  '&:hover': {\n                    background: 'rgba(127, 140, 141, 0.1)',\n                  },\n                }}\n              >\n                Back to Dashboard\n              </Button>\n              <Button\n                variant=\"contained\"\n                onClick={restartQuiz}\n                sx={{\n                  background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\n                  borderRadius: '25px',\n                  padding: '8px 24px',\n                  color: 'white',\n                  fontWeight: 'bold',\n                  '&:hover': {\n                    background: 'linear-gradient(45deg, #1976D2 30%, #1E88E5 90%)',\n                  },\n                }}\n              >\n                Try Again\n              </Button>\n            </DialogActions>\n          </Dialog>\n        )}\n      </Container>\n    </Box>\n  );\n};\n\nexport default Quiz;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}